}
return(a)
}
fib(4)
fib(5)
fib(6)
fib<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579)
#definimos la serie de Fibonacci (20 primeros numeros)
fib<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579,2584,4163)
#definimos la serie de Fibonacci (20 primeros numeros)
fibon<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579,2584,4163)
rm(fib)
fib<-c(0,1,1,2,3,5,8,13,21,34,55,89)
v1<-89; v2<-55+89; v3<-v1+v2; v4<-v3+v2;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
v1<-2; v2<-3; v3<-v1*v2; v4<-v3*v3;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
v1<-89; v2<-89+55; v3<-v1+v2; v4<-v3+v2;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
a<- v1*v3
b<-3*v2*v4
h<-v2*v3+v3*v2
terna(a,b,h)
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
v1<-610; v2<-610+377; v3<-v1+v2; v4<-v3+v2;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
v1<-610; v2<-610+377; v3<-v1-v2; v4<-v3-v2;
v1<-610; v2<-610+377; v3<-v2-v1; v4<-v3-v2;
v1<-610; v2<-610+377; v3<-v2-v1; v4<-v2-v3;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3;
# now we use them to compute a new triplet:
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
rm(fib)
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3;
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
terna <-function (a, b, h){
if (a*a+b*b==h*h) {print('Eureka es un triplet de Pitagoras')}
else {print(' Esta vez no ha habido suerte, no es un triplet de Pitagoras')}
}
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3; #definomos la 4-secuencia
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
fib(6)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
j = b
l = a
a = add.bigz(a, j)  # gmp function
}
return(a)
}
fib(6)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
j = b
b = a
a = add.bigz(a, j)  # gmp function
}
return(a)
}
fib(6)
fib <- function(n) {
k = 0
l = 1
for (i in 1:n) {
j = l
l = a
k = add.bigz(k, j)  # gmp function
}
return(k)
}
fib(6)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
fib(6)
#definimos los valores
a<-0
b<-0
h<-0
terna <-function (a, b, h){
if (a*a+b*b==h*h) {print('Eureka es un triplet de Pitagoras')}
else {print(' Esta vez no ha habido suerte, no es un triplet de Pitagoras')}
}
fibon<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579,2584,4163)
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3; #definomos la 4-secuencia
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
fib(6)
fibonacci <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
rm(fib)
fibonacci <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
fib(6)
fibonacci(6)
fibonacci <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = add.bigz(a, tmp)  # gmp function
}
return(a)
}
fibonacci(6)
ternasPyt<-function(n){
for (k in 2:(n+1)){
a<-k*k-1
b<-2*k
h<-k*k+1
print(c(a,b,h))}
}
ternasPyt(10)
ternasPyt(n)
ternasPyt(100)
# 4. Fibonacci series and Pythagoras triplets
# First items within the Fibonacci series
fib<-c(0,1,1,2,3,5,8,13,21,34,55,89)
terna(a,b,h)
#definimos los valores
a<-0
b<-0
h<-0
terna <-function (a, b, h){
if (a*a+b*b==h*h) {print('Eureka es un triplet de Pitagoras')}
else {print(' Esta vez no ha habido suerte, no es un triplet de Pitagoras')}
}
fibon<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579,2584,4163)
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3; #definomos la 4-secuencia
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
print(fib(6))
fib <- function(n) {
a = 0
b = 1
for (i in 4:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
print(fib(6))
fib <- function(n) {
a = 0
b = 1
for (i in 2:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
print(fib(6))
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
print(fib(6))
fib <- function(n) {
a = 0
b = 1
for (i in 0:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
print(fib(6))
fib <- function(n) {
a = 0
b = 1
for (i in 1:n) {
tmp = b
b = a
a = a + tmp
}
return(a)
}
terna(a,b,h)
print(fib(6))
terna <-function (a, b, h){
if (a*a+b*b==h*h) {print('Eureka es un triplet de Pitagoras')}
else {print(' Esta vez no ha habido suerte, no es un triplet de Pitagoras')}
}
fibon<-c(0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1579,2584,4163)
v1<-610; v2<-610+377; v3<-v2+v1; v4<-v2+v3; #definomos la 4-secuencia
a<- v1*v4
b<-2*v2*v3
h<-v2*v2+v3*v3
terna(a,b,h)
rm(a,b,fibon,h,v1,v2,v3,v4)
library(readr)
calificaciones_ECO_2019EX <- read_delim("C:/Users/Equipo/Desktop/CUNEF/Programacion con R/Practicas/calificaciones ECO 2019EX.csv",
";", escape_double = FALSE, locale = locale(decimal_mark = ","),
trim_ws = TRUE, skip = 3)
View(calificaciones_ECO_2019EX)
calificaciones<-calificaciones_ECO_2019EX
length(calificaciones)
length(calificaciones$`NOMBRE ALUMNO`)
subset(calificaciones$`NOMBRE ALUMNO`)
#Con el comando length
subset.data.frame(calificaciones$`NOMBRE ALUMNO`)
length(calificaciones$`NOMBRE ALUMNO`)
library(dplyr)
print(Ex. Junio)
nrow()
filter(calificaciones)
filter(calificaciones$`Ex. JUNIO-12P`)
filter(calificaciones$Ex. JUNIO-12P)
examenjunio<-calificaciones[calificaciones$`Ex. JUNIO-12P`]
examenjunio<-calificaciones[calificaciones$(`Ex. JUNIO-12P`),]
examenjunio<-calificaciones[calificaciones$`Ex. JUNIO-12P`,]
rm(examenjunio)
names(calificaciones)
names(calificaciones) = C("Alumno", "Parcial1a", "Parcial1b", "Parcial2a", "Parcial2b", "MediaParc","NotaLabs", "Asistencia", "ExamFinal", "NotaFinal", "Calificacion")
names(calificaciones) = C("Alumno", "Parcial1a", "Parcial1b", "Parcial2a", "Parcial2b", "MediaParc","NotaLabs", "Asistencia", "ExamFinal", "NotaFinal", "Calificacion")
names(calificaciones) = c("Alumno", "Parcial1a", "Parcial1b", "Parcial2a", "Parcial2b", "MediaParc","NotaLabs", "Asistencia", "ExamFinal", "NotaFinal", "Calificacion")
names(calificaciones) = c("Alumno", "Parcial1a", "Parcial1b", "Parcial2a", "MediaParc","NotaLabs", "Asistencia", "ExamFinal", "NotaFinal", "Calificacion")
View(calificaciones)
select(calificaciones, ExamFinal)
select(calificaciones$ExamFinal)
ExamenFinal<-select(calificaciones, ExamFinal)
View(ExamenFinal)
ExamenFinal<-filter(ExamenFinal,!is.na(ExamenFinal))
length(ExamenFinal)
length(ExamenFinal$ExamFinal)
mean(ExamenFinal)
mean(ExamenFinal$ExamFinal)
View(calificaciones)
Notas<-select(calificaciones, Nombres, ExamFinal, Asistencia, Calificacion)
Notas<-select(calificaciones, Alumno, ExamFinal, Asistencia, Calificacion)
length(calificaciones$`NOMBRE ALUMNO`)
rm(ExamenFinal)
View(Notas)
mean(Notas$ExamFinal)
Notas<-filter(Notas,!is.na(ExamenFinal))
Notas<-filter(Notas,!is.na(Notas))
Notas<-filter(Notas,!is.na(ExamFinal))
mean(Notas$ExamFinal)
Notas2<-select(calificaciones, Alumno, ExamFinal, Asistencia, Calificacion)
View(Notas2)
View(calificaciones_ECO_2019EX)
Notas2<-select(calificaciones, Alumno, ExamFinal, Asistencia, NotaFinal)
Notas2<-filter(Notas2,!is.na(ExamFinal))
mean(Notas2$ExamFinal)
View(calificaciones)
ApruebanAsistBaja<-subset(Notas2, Alumno, & Asistencia<0.5, & NotaFinal>5)
Notas2<-subset(Notas2, Alumno, & Asistencia<0.5, & NotaFinal>5)
AsistBaja<-subset(Notas2, Asistencia<0.5, & NotaFinal>5)
AsistBaja<-subset(Notas2, Asistencia<0.5,&NotaFinal>5)
AsistBaja=subset(Notas2, Asistencia<0.5, & NotaFinal>5)
AsistBaja=subset(Notas2, Asistencia<0.5, & NotaFinal>5)
AsistBaja
asistbaja<-subset(Notas, Notas$Asistencia<0.5, & Notas$Calificacion>5)
asistbaja<-subset(Notas, Notas$Asistencia<0.5, Notas$Calificacion>5)
asistbaja<-subset(Notas, Notas$Asistencia<0.5)
View(asistbaja)
View(Notas2)
View(Notas)
Notas<-select(calificaciones, Alumno, ExamFinal, Asistencia, NotaFinal)
View(Notas)
asistbaja<-subset(Notas, Notas$Asistencia<0.5)
View(asistbaja)
asistbaja<-subset(asistbaja, asistbaja$NotaFinal>5)
View(asistbaja)
print(asistbaja)
asistbaja<-select(asistbaja, Alumno, Asistencia, NotaFinal)
print(asistbaja)
View(Notas)
View(asistbaja)
View(calificaciones)
View(Notas2)
View(Notas2)
View(Notas2)
Notas<-subset(Notas, Notas$NotaFinal>5)
View(Notas)
Notas<-filter(Notas,!is.na(ExamenFinal))
Notas<-filter(Notas,!is.na(ExamFinal))
View(Notas2)
Notas<-subset(Notas, Notas$NotaFinal>5)
Notas2<-select(calificaciones, Alumno, ExamFinal, Asistencia, NotaFinal)
Notas2<-filter(Notas2,!is.na(ExamFinal))
Notas<-subset(Notas, Notas$NotaFinal>5)
print(Notas)
Notas2<-select(calificaciones, Alumno, ExamFinal, Asistencia, NotaFinal)
Notas2<-subset(Notas2, Notas2$NotaFinal>5)
print(Notas2)
CalifiCategoric<-filter(calificaciones_ECO_2019EX, NotaFinal)
View(calificaciones_ECO_2019EX)
CalifiCategoric<-filter(calificaciones, NotaFinal)
CalifiCategoric<-filter(calificaciones, !NotaFinal)
View(CalifiCategoric)
rm(CalifiCategoric)
CalifiCateg<-select(calificaciones, NotaFinal)
View(CalifiCateg)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
Notas2<-mutate(Notas2, CalifiCateg)
View(Notas2)
Notas2<-cbind.data.frame(Notas2, CalifiCateg)
View(Notas2)
names(Notas2)=("Alumno", "ExamFinal", "Asistencia", "NotaFinal", "CalifCateg")
names(Notas2)=c("Alumno", "ExamFinal", "Asistencia", "NotaFinal", "CalifCateg")
CalifiCateg<-c(5<CalifiCateg<6.9=="Aprobado")
View(CalifiCateg)
View(CalifiCateg)
View(CalifiCateg)
CalifiCateg<-c(5<"CalifiCateg"<6.9=="Aprobado")
CalifiCateg<-(if(CalifiCateg)<6.9=="Aprobado")
CalifiCateg<-(if(CalifiCateg){
CalifiCateg<6.9=="Aprobado")}
CalifiCateg<-(if(CalifiCateg){
CalifiCateg<6.9="Aprobado")}
CalifiCateg<-(if(CalifiCateg){
CalifiCateg<6.9="Aprobado"}
CalifiCateg<-(if(CalifiCateg){
CalifiCateg<6.9="Aprobado"
else(CalifiCateg){
7>=CalifiCateg>8.9="Notable"
else(CalifiCateg){
CalifiCateg>=9="Sobresaliente"
}
}
}
View(Notas2)
print(CalifiCateg)
cat(CalifiCateg)
cat(CalifiCateg, TRUE)
print(CalifiCateg, TRUE)
print(CalifiCateg, FALSE)
CalifiCateg<-CalifiCateg(CalifiCateg>5="Aprobado")
CalifiCateg<-c(CalifiCateg>5="Aprobado")
CalifiCateg<-c(CalifiCateg&CalifiCateg>5="Aprobado")
CalifiCateg<-c(CalifiCateg&CalifiCateg>5=="Aprobado")
CalifiCateg<-c(CalifiCateg&CalifiCateg>5, "Aprobado")
CalifiCateg<-c(CalifiCateg>5, "Aprobado")
View(Notas)
View(Notas2)
CalifiCateg<-c(CalifiCateg>5, "Aprobado")
CalifiCateg<-c(CalifiCateg>5, "Aprobado")
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
View(Notas2)
CalifiCateg<-CalifiCateg(c("Aprobado"))
CalifiCateg<-c("Aprobado")
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-Calificateg(c("Aprobado"))
CalifiCate<-Calificateg(c("Aprobado"))
CalifiCateg<-Calificate(c("Aprobado"))
CalifiCateg<-CalifiCateg(c("Aprobado"))
View(CalifiCateg)
names(Notas2)=c("Alumno", "ExamFinal", "Asistencia", "NotaFinal", "CalifCateg")
View(CalifiCateg)
View(Notas2)
View(CalifiCateg)
CalifiCateg$CalifiCateg<-ifelse(CalifiCateg$NotaFinal>5 == "Aprobado")
CalifiCateg$CalifiCateg<-ifelse((CalifiCateg$NotaFinal)>5 == "Aprobado")
CalifiCateg<-CalifiCateg(c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado"))
CalifiCateg<-Nota(c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado"))
CalifiCateg<-Nota("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado")
CalifiCateg<-c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado")
CalifiCateg<-data.frame()
View(CalifiCateg)
View(CalifiCateg)
CalifiCateg<-data.frame(CalifiCateg)
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado")
hito<-CalifiCateg
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
View(CalifiCateg)
CalifiCateg[1:3] = "Aprobado"
View(Notas)
View(Notas2)
View(CalifiCateg)
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
View(CalifiCateg)
CalifiCateg[1:3] == "Aprobado"
CalifiCateg[3:3] = "Aprobado"
hito<-data.frame()
View(hito)
rm(hito)
View(hito)
levels(CalifiCateg$NotaFinal)<-c(levels(CalifiCateg$NotaFinal, "Aprobado"))
View(CalifiCateg)
CalifiCateg <- CalifiCateg %>% mutate(NotaFinal = replace(NotaFinal, NotaFinal == "Aprobado"))
View(CalifiCateg)
View(CalifiCateg)
Calificateg[1]
Notas[1]
CalifiCateg
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg[1:3] == "Aprobado"
CalifiCateg[3:3] = "Aprobado"
CalifiCateg[1:3] = "Aprobado"
CalifiCateg<-select(calificaciones, NotaFinal)
CalifiCateg<-subset(CalifiCateg, CalifiCateg$NotaFinal>5)
CalifiCateg<-c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado")
NotaFinal<-c("Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado","Aprobado")
View(Notas2)
CalifiCateg<-c("Aprobado","Aprobado","Aprobado","Notable","Aprobado","Sobresaliente","Aprobado","Aprobado","Aprobado","Aprobado","Notable","Aprobado","Notable","Aprobado","Notable","Notable","Notable","Notable","Notable","Notable","Aprobado","Sobresaliente","Notable","Notable","Aprobado","Aprobado","Notable","Notable","Notable","Notable","Aprobado","Aprobado","Aprobado")
datos<-data.frame(CalifiCateg, NotaFinal)
View(datos)
datos<-select(datos, CalifiCateg)
Calificategorica<-datos
View(Calificategorica)
Notas2<-select(Notas2, Alumno, ExamFinal, Asistencia, NotaFinal)
View(Notas2)
Notas2<-cbind.data.frame(Notas2, Calificategorica)
